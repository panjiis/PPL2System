// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v6.32.1
// source: commissions/commision_service.proto

package protogen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommissionType int32

const (
	CommissionType_COMMISSION_TYPE_UNSPECIFIED  CommissionType = 0
	CommissionType_COMMISSION_TYPE_PERCENTAGE   CommissionType = 1
	CommissionType_COMMISSION_TYPE_FIXED_AMOUNT CommissionType = 2
	CommissionType_COMMISSION_TYPE_TIERED       CommissionType = 3
)

// Enum value maps for CommissionType.
var (
	CommissionType_name = map[int32]string{
		0: "COMMISSION_TYPE_UNSPECIFIED",
		1: "COMMISSION_TYPE_PERCENTAGE",
		2: "COMMISSION_TYPE_FIXED_AMOUNT",
		3: "COMMISSION_TYPE_TIERED",
	}
	CommissionType_value = map[string]int32{
		"COMMISSION_TYPE_UNSPECIFIED":  0,
		"COMMISSION_TYPE_PERCENTAGE":   1,
		"COMMISSION_TYPE_FIXED_AMOUNT": 2,
		"COMMISSION_TYPE_TIERED":       3,
	}
)

func (x CommissionType) Enum() *CommissionType {
	p := new(CommissionType)
	*p = x
	return p
}

func (x CommissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_commissions_commision_service_proto_enumTypes[0].Descriptor()
}

func (CommissionType) Type() protoreflect.EnumType {
	return &file_commissions_commision_service_proto_enumTypes[0]
}

func (x CommissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommissionType.Descriptor instead.
func (CommissionType) EnumDescriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{0}
}

type CommissionStatus int32

const (
	CommissionStatus_COMMISSION_STATUS_UNSPECIFIED CommissionStatus = 0
	CommissionStatus_COMMISSION_STATUS_DRAFT       CommissionStatus = 1
	CommissionStatus_COMMISSION_STATUS_CALCULATED  CommissionStatus = 2
	CommissionStatus_COMMISSION_STATUS_APPROVED    CommissionStatus = 3
	CommissionStatus_COMMISSION_STATUS_PAID        CommissionStatus = 4
)

// Enum value maps for CommissionStatus.
var (
	CommissionStatus_name = map[int32]string{
		0: "COMMISSION_STATUS_UNSPECIFIED",
		1: "COMMISSION_STATUS_DRAFT",
		2: "COMMISSION_STATUS_CALCULATED",
		3: "COMMISSION_STATUS_APPROVED",
		4: "COMMISSION_STATUS_PAID",
	}
	CommissionStatus_value = map[string]int32{
		"COMMISSION_STATUS_UNSPECIFIED": 0,
		"COMMISSION_STATUS_DRAFT":       1,
		"COMMISSION_STATUS_CALCULATED":  2,
		"COMMISSION_STATUS_APPROVED":    3,
		"COMMISSION_STATUS_PAID":        4,
	}
)

func (x CommissionStatus) Enum() *CommissionStatus {
	p := new(CommissionStatus)
	*p = x
	return p
}

func (x CommissionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommissionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_commissions_commision_service_proto_enumTypes[1].Descriptor()
}

func (CommissionStatus) Type() protoreflect.EnumType {
	return &file_commissions_commision_service_proto_enumTypes[1]
}

func (x CommissionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommissionStatus.Descriptor instead.
func (CommissionStatus) EnumDescriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{1}
}

type PaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *PaginationResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type DateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate string `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{2}
}

func (x *DateRange) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *DateRange) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type CommissionCalculation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeId             int64                  `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	CalculationPeriodStart string                 `protobuf:"bytes,3,opt,name=calculation_period_start,json=calculationPeriodStart,proto3" json:"calculation_period_start,omitempty"`
	CalculationPeriodEnd   string                 `protobuf:"bytes,4,opt,name=calculation_period_end,json=calculationPeriodEnd,proto3" json:"calculation_period_end,omitempty"`
	TotalSales             string                 `protobuf:"bytes,5,opt,name=total_sales,json=totalSales,proto3" json:"total_sales,omitempty"`
	BaseCommission         string                 `protobuf:"bytes,6,opt,name=base_commission,json=baseCommission,proto3" json:"base_commission,omitempty"`
	BonusCommission        string                 `protobuf:"bytes,7,opt,name=bonus_commission,json=bonusCommission,proto3" json:"bonus_commission,omitempty"`
	TotalCommission        string                 `protobuf:"bytes,8,opt,name=total_commission,json=totalCommission,proto3" json:"total_commission,omitempty"`
	Status                 CommissionStatus       `protobuf:"varint,9,opt,name=status,proto3,enum=commission.CommissionStatus" json:"status,omitempty"`
	CalculatedBy           int64                  `protobuf:"varint,10,opt,name=calculated_by,json=calculatedBy,proto3" json:"calculated_by,omitempty"`
	ApprovedBy             *int64                 `protobuf:"varint,11,opt,name=approved_by,json=approvedBy,proto3,oneof" json:"approved_by,omitempty"`
	Notes                  *string                `protobuf:"bytes,12,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CommissionDetails      []*CommissionDetail    `protobuf:"bytes,15,rep,name=commission_details,json=commissionDetails,proto3" json:"commission_details,omitempty"`
	CommissionPayment      *CommissionPayment     `protobuf:"bytes,16,opt,name=commission_payment,json=commissionPayment,proto3,oneof" json:"commission_payment,omitempty"`
	Employee               *EmployeeSummary       `protobuf:"bytes,17,opt,name=employee,proto3,oneof" json:"employee,omitempty"`
}

func (x *CommissionCalculation) Reset() {
	*x = CommissionCalculation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionCalculation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionCalculation) ProtoMessage() {}

func (x *CommissionCalculation) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionCalculation.ProtoReflect.Descriptor instead.
func (*CommissionCalculation) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{3}
}

func (x *CommissionCalculation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommissionCalculation) GetEmployeeId() int64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CommissionCalculation) GetCalculationPeriodStart() string {
	if x != nil {
		return x.CalculationPeriodStart
	}
	return ""
}

func (x *CommissionCalculation) GetCalculationPeriodEnd() string {
	if x != nil {
		return x.CalculationPeriodEnd
	}
	return ""
}

func (x *CommissionCalculation) GetTotalSales() string {
	if x != nil {
		return x.TotalSales
	}
	return ""
}

func (x *CommissionCalculation) GetBaseCommission() string {
	if x != nil {
		return x.BaseCommission
	}
	return ""
}

func (x *CommissionCalculation) GetBonusCommission() string {
	if x != nil {
		return x.BonusCommission
	}
	return ""
}

func (x *CommissionCalculation) GetTotalCommission() string {
	if x != nil {
		return x.TotalCommission
	}
	return ""
}

func (x *CommissionCalculation) GetStatus() CommissionStatus {
	if x != nil {
		return x.Status
	}
	return CommissionStatus_COMMISSION_STATUS_UNSPECIFIED
}

func (x *CommissionCalculation) GetCalculatedBy() int64 {
	if x != nil {
		return x.CalculatedBy
	}
	return 0
}

func (x *CommissionCalculation) GetApprovedBy() int64 {
	if x != nil && x.ApprovedBy != nil {
		return *x.ApprovedBy
	}
	return 0
}

func (x *CommissionCalculation) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

func (x *CommissionCalculation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CommissionCalculation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CommissionCalculation) GetCommissionDetails() []*CommissionDetail {
	if x != nil {
		return x.CommissionDetails
	}
	return nil
}

func (x *CommissionCalculation) GetCommissionPayment() *CommissionPayment {
	if x != nil {
		return x.CommissionPayment
	}
	return nil
}

func (x *CommissionCalculation) GetEmployee() *EmployeeSummary {
	if x != nil {
		return x.Employee
	}
	return nil
}

type CommissionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CommissionCalculationId int64                  `protobuf:"varint,2,opt,name=commission_calculation_id,json=commissionCalculationId,proto3" json:"commission_calculation_id,omitempty"`
	OrderItemId             int64                  `protobuf:"varint,3,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`
	ProductId               int32                  `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	SalesAmount             string                 `protobuf:"bytes,5,opt,name=sales_amount,json=salesAmount,proto3" json:"sales_amount,omitempty"`
	CommissionRate          string                 `protobuf:"bytes,6,opt,name=commission_rate,json=commissionRate,proto3" json:"commission_rate,omitempty"`
	CommissionAmount        string                 `protobuf:"bytes,7,opt,name=commission_amount,json=commissionAmount,proto3" json:"commission_amount,omitempty"`
	CreatedAt               *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ProductName             *string                `protobuf:"bytes,9,opt,name=product_name,json=productName,proto3,oneof" json:"product_name,omitempty"`
	OrderDocumentNumber     *string                `protobuf:"bytes,10,opt,name=order_document_number,json=orderDocumentNumber,proto3,oneof" json:"order_document_number,omitempty"`
}

func (x *CommissionDetail) Reset() {
	*x = CommissionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionDetail) ProtoMessage() {}

func (x *CommissionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionDetail.ProtoReflect.Descriptor instead.
func (*CommissionDetail) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{4}
}

func (x *CommissionDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommissionDetail) GetCommissionCalculationId() int64 {
	if x != nil {
		return x.CommissionCalculationId
	}
	return 0
}

func (x *CommissionDetail) GetOrderItemId() int64 {
	if x != nil {
		return x.OrderItemId
	}
	return 0
}

func (x *CommissionDetail) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CommissionDetail) GetSalesAmount() string {
	if x != nil {
		return x.SalesAmount
	}
	return ""
}

func (x *CommissionDetail) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *CommissionDetail) GetCommissionAmount() string {
	if x != nil {
		return x.CommissionAmount
	}
	return ""
}

func (x *CommissionDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CommissionDetail) GetProductName() string {
	if x != nil && x.ProductName != nil {
		return *x.ProductName
	}
	return ""
}

func (x *CommissionDetail) GetOrderDocumentNumber() string {
	if x != nil && x.OrderDocumentNumber != nil {
		return *x.OrderDocumentNumber
	}
	return ""
}

type CommissionPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CommissionCalculationId int64                  `protobuf:"varint,2,opt,name=commission_calculation_id,json=commissionCalculationId,proto3" json:"commission_calculation_id,omitempty"`
	EmployeeId              int64                  `protobuf:"varint,3,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	PaymentAmount           string                 `protobuf:"bytes,4,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	PaymentDate             string                 `protobuf:"bytes,5,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	PaymentTypeId           int32                  `protobuf:"varint,6,opt,name=payment_type_id,json=paymentTypeId,proto3" json:"payment_type_id,omitempty"`
	ReferenceNumber         *string                `protobuf:"bytes,7,opt,name=reference_number,json=referenceNumber,proto3,oneof" json:"reference_number,omitempty"`
	PaidBy                  int64                  `protobuf:"varint,8,opt,name=paid_by,json=paidBy,proto3" json:"paid_by,omitempty"`
	Notes                   *string                `protobuf:"bytes,9,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
	CreatedAt               *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PaymentType             *PaymentTypeSummary    `protobuf:"bytes,11,opt,name=payment_type,json=paymentType,proto3,oneof" json:"payment_type,omitempty"`
}

func (x *CommissionPayment) Reset() {
	*x = CommissionPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionPayment) ProtoMessage() {}

func (x *CommissionPayment) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionPayment.ProtoReflect.Descriptor instead.
func (*CommissionPayment) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{5}
}

func (x *CommissionPayment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommissionPayment) GetCommissionCalculationId() int64 {
	if x != nil {
		return x.CommissionCalculationId
	}
	return 0
}

func (x *CommissionPayment) GetEmployeeId() int64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CommissionPayment) GetPaymentAmount() string {
	if x != nil {
		return x.PaymentAmount
	}
	return ""
}

func (x *CommissionPayment) GetPaymentDate() string {
	if x != nil {
		return x.PaymentDate
	}
	return ""
}

func (x *CommissionPayment) GetPaymentTypeId() int32 {
	if x != nil {
		return x.PaymentTypeId
	}
	return 0
}

func (x *CommissionPayment) GetReferenceNumber() string {
	if x != nil && x.ReferenceNumber != nil {
		return *x.ReferenceNumber
	}
	return ""
}

func (x *CommissionPayment) GetPaidBy() int64 {
	if x != nil {
		return x.PaidBy
	}
	return 0
}

func (x *CommissionPayment) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

func (x *CommissionPayment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CommissionPayment) GetPaymentType() *PaymentTypeSummary {
	if x != nil {
		return x.PaymentType
	}
	return nil
}

// Summary models for cross-service references
type EmployeeSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeName   string         `protobuf:"bytes,2,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	Position       *string        `protobuf:"bytes,3,opt,name=position,proto3,oneof" json:"position,omitempty"`
	CommissionRate string         `protobuf:"bytes,4,opt,name=commission_rate,json=commissionRate,proto3" json:"commission_rate,omitempty"`
	CommissionType CommissionType `protobuf:"varint,5,opt,name=commission_type,json=commissionType,proto3,enum=commission.CommissionType" json:"commission_type,omitempty"`
}

func (x *EmployeeSummary) Reset() {
	*x = EmployeeSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeSummary) ProtoMessage() {}

func (x *EmployeeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeSummary.ProtoReflect.Descriptor instead.
func (*EmployeeSummary) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{6}
}

func (x *EmployeeSummary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmployeeSummary) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *EmployeeSummary) GetPosition() string {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return ""
}

func (x *EmployeeSummary) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *EmployeeSummary) GetCommissionType() CommissionType {
	if x != nil {
		return x.CommissionType
	}
	return CommissionType_COMMISSION_TYPE_UNSPECIFIED
}

type PaymentTypeSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PaymentName       string `protobuf:"bytes,2,opt,name=payment_name,json=paymentName,proto3" json:"payment_name,omitempty"`
	ProcessingFeeRate string `protobuf:"bytes,3,opt,name=processing_fee_rate,json=processingFeeRate,proto3" json:"processing_fee_rate,omitempty"`
}

func (x *PaymentTypeSummary) Reset() {
	*x = PaymentTypeSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentTypeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTypeSummary) ProtoMessage() {}

func (x *PaymentTypeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTypeSummary.ProtoReflect.Descriptor instead.
func (*PaymentTypeSummary) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentTypeSummary) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentTypeSummary) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *PaymentTypeSummary) GetProcessingFeeRate() string {
	if x != nil {
		return x.ProcessingFeeRate
	}
	return ""
}

// Commission calculation models
type CommissionBreakdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSales              string            `protobuf:"bytes,1,opt,name=total_sales,json=totalSales,proto3" json:"total_sales,omitempty"`
	BaseCommissionRate      string            `protobuf:"bytes,2,opt,name=base_commission_rate,json=baseCommissionRate,proto3" json:"base_commission_rate,omitempty"`
	BaseCommissionAmount    string            `protobuf:"bytes,3,opt,name=base_commission_amount,json=baseCommissionAmount,proto3" json:"base_commission_amount,omitempty"`
	TierCommissions         []*TierCommission `protobuf:"bytes,4,rep,name=tier_commissions,json=tierCommissions,proto3" json:"tier_commissions,omitempty"`
	BonusCommission         string            `protobuf:"bytes,5,opt,name=bonus_commission,json=bonusCommission,proto3" json:"bonus_commission,omitempty"`
	TotalCommission         string            `protobuf:"bytes,6,opt,name=total_commission,json=totalCommission,proto3" json:"total_commission,omitempty"`
	EffectiveCommissionRate string            `protobuf:"bytes,7,opt,name=effective_commission_rate,json=effectiveCommissionRate,proto3" json:"effective_commission_rate,omitempty"`
}

func (x *CommissionBreakdown) Reset() {
	*x = CommissionBreakdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionBreakdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionBreakdown) ProtoMessage() {}

func (x *CommissionBreakdown) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionBreakdown.ProtoReflect.Descriptor instead.
func (*CommissionBreakdown) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{8}
}

func (x *CommissionBreakdown) GetTotalSales() string {
	if x != nil {
		return x.TotalSales
	}
	return ""
}

func (x *CommissionBreakdown) GetBaseCommissionRate() string {
	if x != nil {
		return x.BaseCommissionRate
	}
	return ""
}

func (x *CommissionBreakdown) GetBaseCommissionAmount() string {
	if x != nil {
		return x.BaseCommissionAmount
	}
	return ""
}

func (x *CommissionBreakdown) GetTierCommissions() []*TierCommission {
	if x != nil {
		return x.TierCommissions
	}
	return nil
}

func (x *CommissionBreakdown) GetBonusCommission() string {
	if x != nil {
		return x.BonusCommission
	}
	return ""
}

func (x *CommissionBreakdown) GetTotalCommission() string {
	if x != nil {
		return x.TotalCommission
	}
	return ""
}

func (x *CommissionBreakdown) GetEffectiveCommissionRate() string {
	if x != nil {
		return x.EffectiveCommissionRate
	}
	return ""
}

type TierCommission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TierMinAmount   string `protobuf:"bytes,1,opt,name=tier_min_amount,json=tierMinAmount,proto3" json:"tier_min_amount,omitempty"`
	TierMaxAmount   string `protobuf:"bytes,2,opt,name=tier_max_amount,json=tierMaxAmount,proto3" json:"tier_max_amount,omitempty"`
	TierRate        string `protobuf:"bytes,3,opt,name=tier_rate,json=tierRate,proto3" json:"tier_rate,omitempty"`
	TierSalesAmount string `protobuf:"bytes,4,opt,name=tier_sales_amount,json=tierSalesAmount,proto3" json:"tier_sales_amount,omitempty"`
	TierCommission  string `protobuf:"bytes,5,opt,name=tier_commission,json=tierCommission,proto3" json:"tier_commission,omitempty"`
}

func (x *TierCommission) Reset() {
	*x = TierCommission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TierCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TierCommission) ProtoMessage() {}

func (x *TierCommission) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TierCommission.ProtoReflect.Descriptor instead.
func (*TierCommission) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{9}
}

func (x *TierCommission) GetTierMinAmount() string {
	if x != nil {
		return x.TierMinAmount
	}
	return ""
}

func (x *TierCommission) GetTierMaxAmount() string {
	if x != nil {
		return x.TierMaxAmount
	}
	return ""
}

func (x *TierCommission) GetTierRate() string {
	if x != nil {
		return x.TierRate
	}
	return ""
}

func (x *TierCommission) GetTierSalesAmount() string {
	if x != nil {
		return x.TierSalesAmount
	}
	return ""
}

func (x *TierCommission) GetTierCommission() string {
	if x != nil {
		return x.TierCommission
	}
	return ""
}

// Commission Calculation
type CalculateCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeId      int64  `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	PeriodStart     string `protobuf:"bytes,2,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodEnd       string `protobuf:"bytes,3,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
	CalculatedBy    int64  `protobuf:"varint,4,opt,name=calculated_by,json=calculatedBy,proto3" json:"calculated_by,omitempty"`
	SaveCalculation *bool  `protobuf:"varint,5,opt,name=save_calculation,json=saveCalculation,proto3,oneof" json:"save_calculation,omitempty"`
}

func (x *CalculateCommissionRequest) Reset() {
	*x = CalculateCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateCommissionRequest) ProtoMessage() {}

func (x *CalculateCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateCommissionRequest.ProtoReflect.Descriptor instead.
func (*CalculateCommissionRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{10}
}

func (x *CalculateCommissionRequest) GetEmployeeId() int64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CalculateCommissionRequest) GetPeriodStart() string {
	if x != nil {
		return x.PeriodStart
	}
	return ""
}

func (x *CalculateCommissionRequest) GetPeriodEnd() string {
	if x != nil {
		return x.PeriodEnd
	}
	return ""
}

func (x *CalculateCommissionRequest) GetCalculatedBy() int64 {
	if x != nil {
		return x.CalculatedBy
	}
	return 0
}

func (x *CalculateCommissionRequest) GetSaveCalculation() bool {
	if x != nil && x.SaveCalculation != nil {
		return *x.SaveCalculation
	}
	return false
}

type CalculateCommissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculation *CommissionCalculation `protobuf:"bytes,1,opt,name=commission_calculation,json=commissionCalculation,proto3" json:"commission_calculation,omitempty"`
	Breakdown             *CommissionBreakdown   `protobuf:"bytes,2,opt,name=breakdown,proto3" json:"breakdown,omitempty"`
	IsPreview             bool                   `protobuf:"varint,3,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
}

func (x *CalculateCommissionResponse) Reset() {
	*x = CalculateCommissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateCommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateCommissionResponse) ProtoMessage() {}

func (x *CalculateCommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateCommissionResponse.ProtoReflect.Descriptor instead.
func (*CalculateCommissionResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{11}
}

func (x *CalculateCommissionResponse) GetCommissionCalculation() *CommissionCalculation {
	if x != nil {
		return x.CommissionCalculation
	}
	return nil
}

func (x *CalculateCommissionResponse) GetBreakdown() *CommissionBreakdown {
	if x != nil {
		return x.Breakdown
	}
	return nil
}

func (x *CalculateCommissionResponse) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

type RecalculateCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculationId int64   `protobuf:"varint,1,opt,name=commission_calculation_id,json=commissionCalculationId,proto3" json:"commission_calculation_id,omitempty"`
	RecalculatedBy          int64   `protobuf:"varint,2,opt,name=recalculated_by,json=recalculatedBy,proto3" json:"recalculated_by,omitempty"`
	Notes                   *string `protobuf:"bytes,3,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
}

func (x *RecalculateCommissionRequest) Reset() {
	*x = RecalculateCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecalculateCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecalculateCommissionRequest) ProtoMessage() {}

func (x *RecalculateCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecalculateCommissionRequest.ProtoReflect.Descriptor instead.
func (*RecalculateCommissionRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{12}
}

func (x *RecalculateCommissionRequest) GetCommissionCalculationId() int64 {
	if x != nil {
		return x.CommissionCalculationId
	}
	return 0
}

func (x *RecalculateCommissionRequest) GetRecalculatedBy() int64 {
	if x != nil {
		return x.RecalculatedBy
	}
	return 0
}

func (x *RecalculateCommissionRequest) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

type RecalculateCommissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculation *CommissionCalculation `protobuf:"bytes,1,opt,name=commission_calculation,json=commissionCalculation,proto3" json:"commission_calculation,omitempty"`
	Breakdown             *CommissionBreakdown   `protobuf:"bytes,2,opt,name=breakdown,proto3" json:"breakdown,omitempty"`
}

func (x *RecalculateCommissionResponse) Reset() {
	*x = RecalculateCommissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecalculateCommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecalculateCommissionResponse) ProtoMessage() {}

func (x *RecalculateCommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecalculateCommissionResponse.ProtoReflect.Descriptor instead.
func (*RecalculateCommissionResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{13}
}

func (x *RecalculateCommissionResponse) GetCommissionCalculation() *CommissionCalculation {
	if x != nil {
		return x.CommissionCalculation
	}
	return nil
}

func (x *RecalculateCommissionResponse) GetBreakdown() *CommissionBreakdown {
	if x != nil {
		return x.Breakdown
	}
	return nil
}

// Commission Management
type GetCommissionCalculationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCommissionCalculationRequest) Reset() {
	*x = GetCommissionCalculationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionCalculationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionCalculationRequest) ProtoMessage() {}

func (x *GetCommissionCalculationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionCalculationRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionCalculationRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetCommissionCalculationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCommissionCalculationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculation *CommissionCalculation `protobuf:"bytes,1,opt,name=commission_calculation,json=commissionCalculation,proto3" json:"commission_calculation,omitempty"`
}

func (x *GetCommissionCalculationResponse) Reset() {
	*x = GetCommissionCalculationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionCalculationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionCalculationResponse) ProtoMessage() {}

func (x *GetCommissionCalculationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionCalculationResponse.ProtoReflect.Descriptor instead.
func (*GetCommissionCalculationResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetCommissionCalculationResponse) GetCommissionCalculation() *CommissionCalculation {
	if x != nil {
		return x.CommissionCalculation
	}
	return nil
}

type ListCommissionCalculationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination        *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	EmployeeId        *int64             `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3,oneof" json:"employee_id,omitempty"`
	Status            *CommissionStatus  `protobuf:"varint,3,opt,name=status,proto3,enum=commission.CommissionStatus,oneof" json:"status,omitempty"`
	CalculationPeriod *DateRange         `protobuf:"bytes,4,opt,name=calculation_period,json=calculationPeriod,proto3,oneof" json:"calculation_period,omitempty"`
}

func (x *ListCommissionCalculationsRequest) Reset() {
	*x = ListCommissionCalculationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommissionCalculationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommissionCalculationsRequest) ProtoMessage() {}

func (x *ListCommissionCalculationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommissionCalculationsRequest.ProtoReflect.Descriptor instead.
func (*ListCommissionCalculationsRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListCommissionCalculationsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListCommissionCalculationsRequest) GetEmployeeId() int64 {
	if x != nil && x.EmployeeId != nil {
		return *x.EmployeeId
	}
	return 0
}

func (x *ListCommissionCalculationsRequest) GetStatus() CommissionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return CommissionStatus_COMMISSION_STATUS_UNSPECIFIED
}

func (x *ListCommissionCalculationsRequest) GetCalculationPeriod() *DateRange {
	if x != nil {
		return x.CalculationPeriod
	}
	return nil
}

type ListCommissionCalculationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculations []*CommissionCalculation `protobuf:"bytes,1,rep,name=commission_calculations,json=commissionCalculations,proto3" json:"commission_calculations,omitempty"`
	Pagination             *PaginationResponse      `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCommissionCalculationsResponse) Reset() {
	*x = ListCommissionCalculationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommissionCalculationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommissionCalculationsResponse) ProtoMessage() {}

func (x *ListCommissionCalculationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommissionCalculationsResponse.ProtoReflect.Descriptor instead.
func (*ListCommissionCalculationsResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListCommissionCalculationsResponse) GetCommissionCalculations() []*CommissionCalculation {
	if x != nil {
		return x.CommissionCalculations
	}
	return nil
}

func (x *ListCommissionCalculationsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ApproveCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculationId int64   `protobuf:"varint,1,opt,name=commission_calculation_id,json=commissionCalculationId,proto3" json:"commission_calculation_id,omitempty"`
	ApprovedBy              int64   `protobuf:"varint,2,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	ApprovalNotes           *string `protobuf:"bytes,3,opt,name=approval_notes,json=approvalNotes,proto3,oneof" json:"approval_notes,omitempty"`
}

func (x *ApproveCommissionRequest) Reset() {
	*x = ApproveCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveCommissionRequest) ProtoMessage() {}

func (x *ApproveCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveCommissionRequest.ProtoReflect.Descriptor instead.
func (*ApproveCommissionRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{18}
}

func (x *ApproveCommissionRequest) GetCommissionCalculationId() int64 {
	if x != nil {
		return x.CommissionCalculationId
	}
	return 0
}

func (x *ApproveCommissionRequest) GetApprovedBy() int64 {
	if x != nil {
		return x.ApprovedBy
	}
	return 0
}

func (x *ApproveCommissionRequest) GetApprovalNotes() string {
	if x != nil && x.ApprovalNotes != nil {
		return *x.ApprovalNotes
	}
	return ""
}

type ApproveCommissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculation *CommissionCalculation `protobuf:"bytes,1,opt,name=commission_calculation,json=commissionCalculation,proto3" json:"commission_calculation,omitempty"`
}

func (x *ApproveCommissionResponse) Reset() {
	*x = ApproveCommissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveCommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveCommissionResponse) ProtoMessage() {}

func (x *ApproveCommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveCommissionResponse.ProtoReflect.Descriptor instead.
func (*ApproveCommissionResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{19}
}

func (x *ApproveCommissionResponse) GetCommissionCalculation() *CommissionCalculation {
	if x != nil {
		return x.CommissionCalculation
	}
	return nil
}

type RejectCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculationId int64  `protobuf:"varint,1,opt,name=commission_calculation_id,json=commissionCalculationId,proto3" json:"commission_calculation_id,omitempty"`
	RejectedBy              int64  `protobuf:"varint,2,opt,name=rejected_by,json=rejectedBy,proto3" json:"rejected_by,omitempty"`
	RejectionReason         string `protobuf:"bytes,3,opt,name=rejection_reason,json=rejectionReason,proto3" json:"rejection_reason,omitempty"`
}

func (x *RejectCommissionRequest) Reset() {
	*x = RejectCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectCommissionRequest) ProtoMessage() {}

func (x *RejectCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectCommissionRequest.ProtoReflect.Descriptor instead.
func (*RejectCommissionRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{20}
}

func (x *RejectCommissionRequest) GetCommissionCalculationId() int64 {
	if x != nil {
		return x.CommissionCalculationId
	}
	return 0
}

func (x *RejectCommissionRequest) GetRejectedBy() int64 {
	if x != nil {
		return x.RejectedBy
	}
	return 0
}

func (x *RejectCommissionRequest) GetRejectionReason() string {
	if x != nil {
		return x.RejectionReason
	}
	return ""
}

type RejectCommissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculation *CommissionCalculation `protobuf:"bytes,1,opt,name=commission_calculation,json=commissionCalculation,proto3" json:"commission_calculation,omitempty"`
}

func (x *RejectCommissionResponse) Reset() {
	*x = RejectCommissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectCommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectCommissionResponse) ProtoMessage() {}

func (x *RejectCommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectCommissionResponse.ProtoReflect.Descriptor instead.
func (*RejectCommissionResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{21}
}

func (x *RejectCommissionResponse) GetCommissionCalculation() *CommissionCalculation {
	if x != nil {
		return x.CommissionCalculation
	}
	return nil
}

// Commission Payment
type PayCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculationId int64   `protobuf:"varint,1,opt,name=commission_calculation_id,json=commissionCalculationId,proto3" json:"commission_calculation_id,omitempty"`
	PaymentTypeId           int32   `protobuf:"varint,2,opt,name=payment_type_id,json=paymentTypeId,proto3" json:"payment_type_id,omitempty"`
	ReferenceNumber         *string `protobuf:"bytes,3,opt,name=reference_number,json=referenceNumber,proto3,oneof" json:"reference_number,omitempty"`
	PaidBy                  int64   `protobuf:"varint,4,opt,name=paid_by,json=paidBy,proto3" json:"paid_by,omitempty"`
	Notes                   *string `protobuf:"bytes,5,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
	PaymentDate             *string `protobuf:"bytes,6,opt,name=payment_date,json=paymentDate,proto3,oneof" json:"payment_date,omitempty"`
}

func (x *PayCommissionRequest) Reset() {
	*x = PayCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayCommissionRequest) ProtoMessage() {}

func (x *PayCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayCommissionRequest.ProtoReflect.Descriptor instead.
func (*PayCommissionRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{22}
}

func (x *PayCommissionRequest) GetCommissionCalculationId() int64 {
	if x != nil {
		return x.CommissionCalculationId
	}
	return 0
}

func (x *PayCommissionRequest) GetPaymentTypeId() int32 {
	if x != nil {
		return x.PaymentTypeId
	}
	return 0
}

func (x *PayCommissionRequest) GetReferenceNumber() string {
	if x != nil && x.ReferenceNumber != nil {
		return *x.ReferenceNumber
	}
	return ""
}

func (x *PayCommissionRequest) GetPaidBy() int64 {
	if x != nil {
		return x.PaidBy
	}
	return 0
}

func (x *PayCommissionRequest) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

func (x *PayCommissionRequest) GetPaymentDate() string {
	if x != nil && x.PaymentDate != nil {
		return *x.PaymentDate
	}
	return ""
}

type PayCommissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionPayment  *CommissionPayment     `protobuf:"bytes,1,opt,name=commission_payment,json=commissionPayment,proto3" json:"commission_payment,omitempty"`
	UpdatedCalculation *CommissionCalculation `protobuf:"bytes,2,opt,name=updated_calculation,json=updatedCalculation,proto3" json:"updated_calculation,omitempty"`
}

func (x *PayCommissionResponse) Reset() {
	*x = PayCommissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayCommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayCommissionResponse) ProtoMessage() {}

func (x *PayCommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayCommissionResponse.ProtoReflect.Descriptor instead.
func (*PayCommissionResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{23}
}

func (x *PayCommissionResponse) GetCommissionPayment() *CommissionPayment {
	if x != nil {
		return x.CommissionPayment
	}
	return nil
}

func (x *PayCommissionResponse) GetUpdatedCalculation() *CommissionCalculation {
	if x != nil {
		return x.UpdatedCalculation
	}
	return nil
}

type GetCommissionPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculationId int64 `protobuf:"varint,1,opt,name=commission_calculation_id,json=commissionCalculationId,proto3" json:"commission_calculation_id,omitempty"`
}

func (x *GetCommissionPaymentRequest) Reset() {
	*x = GetCommissionPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionPaymentRequest) ProtoMessage() {}

func (x *GetCommissionPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionPaymentRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionPaymentRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetCommissionPaymentRequest) GetCommissionCalculationId() int64 {
	if x != nil {
		return x.CommissionCalculationId
	}
	return 0
}

type GetCommissionPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionPayment *CommissionPayment `protobuf:"bytes,1,opt,name=commission_payment,json=commissionPayment,proto3" json:"commission_payment,omitempty"`
}

func (x *GetCommissionPaymentResponse) Reset() {
	*x = GetCommissionPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionPaymentResponse) ProtoMessage() {}

func (x *GetCommissionPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionPaymentResponse.ProtoReflect.Descriptor instead.
func (*GetCommissionPaymentResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetCommissionPaymentResponse) GetCommissionPayment() *CommissionPayment {
	if x != nil {
		return x.CommissionPayment
	}
	return nil
}

// Commission Reports
type GetCommissionSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeId int64      `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	DateRange  *DateRange `protobuf:"bytes,2,opt,name=date_range,json=dateRange,proto3" json:"date_range,omitempty"`
}

func (x *GetCommissionSummaryRequest) Reset() {
	*x = GetCommissionSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionSummaryRequest) ProtoMessage() {}

func (x *GetCommissionSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionSummaryRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetCommissionSummaryRequest) GetEmployeeId() int64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *GetCommissionSummaryRequest) GetDateRange() *DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

type GetCommissionSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary *CommissionSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *GetCommissionSummaryResponse) Reset() {
	*x = GetCommissionSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionSummaryResponse) ProtoMessage() {}

func (x *GetCommissionSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetCommissionSummaryResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetCommissionSummaryResponse) GetSummary() *CommissionSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type CommissionSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeId            int64                    `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	EmployeeName          string                   `protobuf:"bytes,2,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	Period                *DateRange               `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	TotalSales            string                   `protobuf:"bytes,4,opt,name=total_sales,json=totalSales,proto3" json:"total_sales,omitempty"`
	TotalCommissionEarned string                   `protobuf:"bytes,5,opt,name=total_commission_earned,json=totalCommissionEarned,proto3" json:"total_commission_earned,omitempty"`
	TotalCommissionPaid   string                   `protobuf:"bytes,6,opt,name=total_commission_paid,json=totalCommissionPaid,proto3" json:"total_commission_paid,omitempty"`
	CommissionPending     string                   `protobuf:"bytes,7,opt,name=commission_pending,json=commissionPending,proto3" json:"commission_pending,omitempty"`
	AverageCommissionRate string                   `protobuf:"bytes,8,opt,name=average_commission_rate,json=averageCommissionRate,proto3" json:"average_commission_rate,omitempty"`
	CalculationCount      int32                    `protobuf:"varint,9,opt,name=calculation_count,json=calculationCount,proto3" json:"calculation_count,omitempty"`
	RecentCalculations    []*CommissionCalculation `protobuf:"bytes,10,rep,name=recent_calculations,json=recentCalculations,proto3" json:"recent_calculations,omitempty"`
}

func (x *CommissionSummary) Reset() {
	*x = CommissionSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionSummary) ProtoMessage() {}

func (x *CommissionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionSummary.ProtoReflect.Descriptor instead.
func (*CommissionSummary) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{28}
}

func (x *CommissionSummary) GetEmployeeId() int64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *CommissionSummary) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *CommissionSummary) GetPeriod() *DateRange {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *CommissionSummary) GetTotalSales() string {
	if x != nil {
		return x.TotalSales
	}
	return ""
}

func (x *CommissionSummary) GetTotalCommissionEarned() string {
	if x != nil {
		return x.TotalCommissionEarned
	}
	return ""
}

func (x *CommissionSummary) GetTotalCommissionPaid() string {
	if x != nil {
		return x.TotalCommissionPaid
	}
	return ""
}

func (x *CommissionSummary) GetCommissionPending() string {
	if x != nil {
		return x.CommissionPending
	}
	return ""
}

func (x *CommissionSummary) GetAverageCommissionRate() string {
	if x != nil {
		return x.AverageCommissionRate
	}
	return ""
}

func (x *CommissionSummary) GetCalculationCount() int32 {
	if x != nil {
		return x.CalculationCount
	}
	return 0
}

func (x *CommissionSummary) GetRecentCalculations() []*CommissionCalculation {
	if x != nil {
		return x.RecentCalculations
	}
	return nil
}

type GetCommissionReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateRange  *DateRange         `protobuf:"bytes,1,opt,name=date_range,json=dateRange,proto3" json:"date_range,omitempty"`
	EmployeeId *int64             `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3,oneof" json:"employee_id,omitempty"`
	Status     *CommissionStatus  `protobuf:"varint,3,opt,name=status,proto3,enum=commission.CommissionStatus,oneof" json:"status,omitempty"`
	Pagination *PaginationRequest `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetCommissionReportRequest) Reset() {
	*x = GetCommissionReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionReportRequest) ProtoMessage() {}

func (x *GetCommissionReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionReportRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionReportRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetCommissionReportRequest) GetDateRange() *DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *GetCommissionReportRequest) GetEmployeeId() int64 {
	if x != nil && x.EmployeeId != nil {
		return *x.EmployeeId
	}
	return 0
}

func (x *GetCommissionReportRequest) GetStatus() CommissionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return CommissionStatus_COMMISSION_STATUS_UNSPECIFIED
}

func (x *GetCommissionReportRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetCommissionReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeSummaries          []*CommissionSummary `protobuf:"bytes,1,rep,name=employee_summaries,json=employeeSummaries,proto3" json:"employee_summaries,omitempty"`
	TotalCommissionsCalculated string               `protobuf:"bytes,2,opt,name=total_commissions_calculated,json=totalCommissionsCalculated,proto3" json:"total_commissions_calculated,omitempty"`
	TotalCommissionsPaid       string               `protobuf:"bytes,3,opt,name=total_commissions_paid,json=totalCommissionsPaid,proto3" json:"total_commissions_paid,omitempty"`
	TotalCommissionsPending    string               `protobuf:"bytes,4,opt,name=total_commissions_pending,json=totalCommissionsPending,proto3" json:"total_commissions_pending,omitempty"`
	Pagination                 *PaginationResponse  `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetCommissionReportResponse) Reset() {
	*x = GetCommissionReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionReportResponse) ProtoMessage() {}

func (x *GetCommissionReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionReportResponse.ProtoReflect.Descriptor instead.
func (*GetCommissionReportResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetCommissionReportResponse) GetEmployeeSummaries() []*CommissionSummary {
	if x != nil {
		return x.EmployeeSummaries
	}
	return nil
}

func (x *GetCommissionReportResponse) GetTotalCommissionsCalculated() string {
	if x != nil {
		return x.TotalCommissionsCalculated
	}
	return ""
}

func (x *GetCommissionReportResponse) GetTotalCommissionsPaid() string {
	if x != nil {
		return x.TotalCommissionsPaid
	}
	return ""
}

func (x *GetCommissionReportResponse) GetTotalCommissionsPending() string {
	if x != nil {
		return x.TotalCommissionsPending
	}
	return ""
}

func (x *GetCommissionReportResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Bulk Operations
type BulkCalculateCommissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeIds  []int64 `protobuf:"varint,1,rep,packed,name=employee_ids,json=employeeIds,proto3" json:"employee_ids,omitempty"`
	PeriodStart  string  `protobuf:"bytes,2,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodEnd    string  `protobuf:"bytes,3,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
	CalculatedBy int64   `protobuf:"varint,4,opt,name=calculated_by,json=calculatedBy,proto3" json:"calculated_by,omitempty"`
}

func (x *BulkCalculateCommissionsRequest) Reset() {
	*x = BulkCalculateCommissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCalculateCommissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCalculateCommissionsRequest) ProtoMessage() {}

func (x *BulkCalculateCommissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCalculateCommissionsRequest.ProtoReflect.Descriptor instead.
func (*BulkCalculateCommissionsRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{31}
}

func (x *BulkCalculateCommissionsRequest) GetEmployeeIds() []int64 {
	if x != nil {
		return x.EmployeeIds
	}
	return nil
}

func (x *BulkCalculateCommissionsRequest) GetPeriodStart() string {
	if x != nil {
		return x.PeriodStart
	}
	return ""
}

func (x *BulkCalculateCommissionsRequest) GetPeriodEnd() string {
	if x != nil {
		return x.PeriodEnd
	}
	return ""
}

func (x *BulkCalculateCommissionsRequest) GetCalculatedBy() int64 {
	if x != nil {
		return x.CalculatedBy
	}
	return 0
}

type BulkCalculateCommissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calculations []*CommissionCalculation `protobuf:"bytes,1,rep,name=calculations,proto3" json:"calculations,omitempty"`
	Errors       []string                 `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	SuccessCount int32                    `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	ErrorCount   int32                    `protobuf:"varint,4,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
}

func (x *BulkCalculateCommissionsResponse) Reset() {
	*x = BulkCalculateCommissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCalculateCommissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCalculateCommissionsResponse) ProtoMessage() {}

func (x *BulkCalculateCommissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCalculateCommissionsResponse.ProtoReflect.Descriptor instead.
func (*BulkCalculateCommissionsResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{32}
}

func (x *BulkCalculateCommissionsResponse) GetCalculations() []*CommissionCalculation {
	if x != nil {
		return x.Calculations
	}
	return nil
}

func (x *BulkCalculateCommissionsResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *BulkCalculateCommissionsResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BulkCalculateCommissionsResponse) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

type BulkApproveCommissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionCalculationIds []int64 `protobuf:"varint,1,rep,packed,name=commission_calculation_ids,json=commissionCalculationIds,proto3" json:"commission_calculation_ids,omitempty"`
	ApprovedBy               int64   `protobuf:"varint,2,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	ApprovalNotes            *string `protobuf:"bytes,3,opt,name=approval_notes,json=approvalNotes,proto3,oneof" json:"approval_notes,omitempty"`
}

func (x *BulkApproveCommissionsRequest) Reset() {
	*x = BulkApproveCommissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkApproveCommissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkApproveCommissionsRequest) ProtoMessage() {}

func (x *BulkApproveCommissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkApproveCommissionsRequest.ProtoReflect.Descriptor instead.
func (*BulkApproveCommissionsRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{33}
}

func (x *BulkApproveCommissionsRequest) GetCommissionCalculationIds() []int64 {
	if x != nil {
		return x.CommissionCalculationIds
	}
	return nil
}

func (x *BulkApproveCommissionsRequest) GetApprovedBy() int64 {
	if x != nil {
		return x.ApprovedBy
	}
	return 0
}

func (x *BulkApproveCommissionsRequest) GetApprovalNotes() string {
	if x != nil && x.ApprovalNotes != nil {
		return *x.ApprovalNotes
	}
	return ""
}

type BulkApproveCommissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApprovedCalculations []*CommissionCalculation `protobuf:"bytes,1,rep,name=approved_calculations,json=approvedCalculations,proto3" json:"approved_calculations,omitempty"`
	Errors               []string                 `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	SuccessCount         int32                    `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	ErrorCount           int32                    `protobuf:"varint,4,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
}

func (x *BulkApproveCommissionsResponse) Reset() {
	*x = BulkApproveCommissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkApproveCommissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkApproveCommissionsResponse) ProtoMessage() {}

func (x *BulkApproveCommissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkApproveCommissionsResponse.ProtoReflect.Descriptor instead.
func (*BulkApproveCommissionsResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{34}
}

func (x *BulkApproveCommissionsResponse) GetApprovedCalculations() []*CommissionCalculation {
	if x != nil {
		return x.ApprovedCalculations
	}
	return nil
}

func (x *BulkApproveCommissionsResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *BulkApproveCommissionsResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BulkApproveCommissionsResponse) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

// Commission Settings/Configuration
type GetCommissionSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeId int64 `protobuf:"varint,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
}

func (x *GetCommissionSettingsRequest) Reset() {
	*x = GetCommissionSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionSettingsRequest) ProtoMessage() {}

func (x *GetCommissionSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionSettingsRequest) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetCommissionSettingsRequest) GetEmployeeId() int64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

type GetCommissionSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Employee     *EmployeeSummary         `protobuf:"bytes,1,opt,name=employee,proto3" json:"employee,omitempty"`
	TierSettings []*CommissionTierSetting `protobuf:"bytes,2,rep,name=tier_settings,json=tierSettings,proto3" json:"tier_settings,omitempty"`
}

func (x *GetCommissionSettingsResponse) Reset() {
	*x = GetCommissionSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionSettingsResponse) ProtoMessage() {}

func (x *GetCommissionSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetCommissionSettingsResponse) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetCommissionSettingsResponse) GetEmployee() *EmployeeSummary {
	if x != nil {
		return x.Employee
	}
	return nil
}

func (x *GetCommissionSettingsResponse) GetTierSettings() []*CommissionTierSetting {
	if x != nil {
		return x.TierSettings
	}
	return nil
}

type CommissionTierSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MinSalesAmount string  `protobuf:"bytes,2,opt,name=min_sales_amount,json=minSalesAmount,proto3" json:"min_sales_amount,omitempty"`
	MaxSalesAmount *string `protobuf:"bytes,3,opt,name=max_sales_amount,json=maxSalesAmount,proto3,oneof" json:"max_sales_amount,omitempty"`
	CommissionRate string  `protobuf:"bytes,4,opt,name=commission_rate,json=commissionRate,proto3" json:"commission_rate,omitempty"`
}

func (x *CommissionTierSetting) Reset() {
	*x = CommissionTierSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commissions_commision_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionTierSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionTierSetting) ProtoMessage() {}

func (x *CommissionTierSetting) ProtoReflect() protoreflect.Message {
	mi := &file_commissions_commision_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionTierSetting.ProtoReflect.Descriptor instead.
func (*CommissionTierSetting) Descriptor() ([]byte, []int) {
	return file_commissions_commision_service_proto_rawDescGZIP(), []int{37}
}

func (x *CommissionTierSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommissionTierSetting) GetMinSalesAmount() string {
	if x != nil {
		return x.MinSalesAmount
	}
	return ""
}

func (x *CommissionTierSetting) GetMaxSalesAmount() string {
	if x != nil && x.MaxSalesAmount != nil {
		return *x.MaxSalesAmount
	}
	return ""
}

func (x *CommissionTierSetting) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

var File_commissions_commision_service_proto protoreflect.FileDescriptor

var file_commissions_commision_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x5d, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x45, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x86, 0x07, 0x0a, 0x15, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x34,
	0x0a, 0x16, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x45, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x24, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4b, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x51, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x02,
	0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x08, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x48, 0x03, 0x52, 0x08, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x42, 0x15,
	0x0a, 0x13, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x22, 0xe1, 0x03, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x89, 0x04, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x19,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x10, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x61, 0x69, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61,
	0x69, 0x64, 0x42, 0x79, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x48, 0x02, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x0f, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x22, 0xf7, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x45, 0x0a, 0x10, 0x74, 0x69, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a,
	0x0a, 0x19, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0e, 0x54,
	0x69, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x69, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x69, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x69, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x69,
	0x65, 0x72, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x69, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xe9, 0x01, 0x0a, 0x1a, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2e, 0x0a, 0x10, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd5, 0x01, 0x0a, 0x1b,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x16, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x09, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f,
	0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x09, 0x62, 0x72, 0x65, 0x61, 0x6b,
	0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x22, 0xa8, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xb8,
	0x01, 0x0a, 0x1d, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x09, 0x62, 0x72,
	0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x09,
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x02, 0x0a, 0x21, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x49, 0x0a, 0x12, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x48, 0x02, 0x52, 0x11, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xc0, 0x01,
	0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xb6, 0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2a, 0x0a, 0x0e, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4e, 0x6f,
	0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x19, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xa1, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x19,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x18, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x02, 0x0a, 0x14, 0x50,
	0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x69, 0x64, 0x42, 0x79,
	0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x13, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x59, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x57,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xfd, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x61, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x69, 0x64, 0x12,
	0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x36,
	0x0a, 0x17, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x12, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0b,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xdf, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x11, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x61, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x69, 0x64, 0x12, 0x3a, 0x0a,
	0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x1f, 0x42, 0x75,
	0x6c, 0x6b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45,
	0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xc7, 0x01, 0x0a, 0x20, 0x42, 0x75, 0x6c, 0x6b,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xbd, 0x01, 0x0a, 0x1d, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x2a, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x22, 0xd6, 0x01, 0x0a, 0x1e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x08, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x08, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x74, 0x69, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x0c, 0x74, 0x69, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xbe,
	0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e,
	0x6d, 0x61, 0x78, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2a,
	0x8f, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x41, 0x47,
	0x45, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x45, 0x52, 0x45, 0x44, 0x10,
	0x03, 0x2a, 0xb0, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4d,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4c, 0x43,
	0x55, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x50,
	0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41,
	0x49, 0x44, 0x10, 0x04, 0x32, 0x88, 0x0b, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6c, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x75, 0x0a, 0x18, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x16,
	0x42, 0x75, 0x6c, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x75, 0x6c, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0d, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x27, 0x5a, 0x25, 0x73, 0x79, 0x6e, 0x74, 0x72, 0x61, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commissions_commision_service_proto_rawDescOnce sync.Once
	file_commissions_commision_service_proto_rawDescData = file_commissions_commision_service_proto_rawDesc
)

func file_commissions_commision_service_proto_rawDescGZIP() []byte {
	file_commissions_commision_service_proto_rawDescOnce.Do(func() {
		file_commissions_commision_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_commissions_commision_service_proto_rawDescData)
	})
	return file_commissions_commision_service_proto_rawDescData
}

var file_commissions_commision_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_commissions_commision_service_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_commissions_commision_service_proto_goTypes = []interface{}{
	(CommissionType)(0),                        // 0: commission.CommissionType
	(CommissionStatus)(0),                      // 1: commission.CommissionStatus
	(*PaginationRequest)(nil),                  // 2: commission.PaginationRequest
	(*PaginationResponse)(nil),                 // 3: commission.PaginationResponse
	(*DateRange)(nil),                          // 4: commission.DateRange
	(*CommissionCalculation)(nil),              // 5: commission.CommissionCalculation
	(*CommissionDetail)(nil),                   // 6: commission.CommissionDetail
	(*CommissionPayment)(nil),                  // 7: commission.CommissionPayment
	(*EmployeeSummary)(nil),                    // 8: commission.EmployeeSummary
	(*PaymentTypeSummary)(nil),                 // 9: commission.PaymentTypeSummary
	(*CommissionBreakdown)(nil),                // 10: commission.CommissionBreakdown
	(*TierCommission)(nil),                     // 11: commission.TierCommission
	(*CalculateCommissionRequest)(nil),         // 12: commission.CalculateCommissionRequest
	(*CalculateCommissionResponse)(nil),        // 13: commission.CalculateCommissionResponse
	(*RecalculateCommissionRequest)(nil),       // 14: commission.RecalculateCommissionRequest
	(*RecalculateCommissionResponse)(nil),      // 15: commission.RecalculateCommissionResponse
	(*GetCommissionCalculationRequest)(nil),    // 16: commission.GetCommissionCalculationRequest
	(*GetCommissionCalculationResponse)(nil),   // 17: commission.GetCommissionCalculationResponse
	(*ListCommissionCalculationsRequest)(nil),  // 18: commission.ListCommissionCalculationsRequest
	(*ListCommissionCalculationsResponse)(nil), // 19: commission.ListCommissionCalculationsResponse
	(*ApproveCommissionRequest)(nil),           // 20: commission.ApproveCommissionRequest
	(*ApproveCommissionResponse)(nil),          // 21: commission.ApproveCommissionResponse
	(*RejectCommissionRequest)(nil),            // 22: commission.RejectCommissionRequest
	(*RejectCommissionResponse)(nil),           // 23: commission.RejectCommissionResponse
	(*PayCommissionRequest)(nil),               // 24: commission.PayCommissionRequest
	(*PayCommissionResponse)(nil),              // 25: commission.PayCommissionResponse
	(*GetCommissionPaymentRequest)(nil),        // 26: commission.GetCommissionPaymentRequest
	(*GetCommissionPaymentResponse)(nil),       // 27: commission.GetCommissionPaymentResponse
	(*GetCommissionSummaryRequest)(nil),        // 28: commission.GetCommissionSummaryRequest
	(*GetCommissionSummaryResponse)(nil),       // 29: commission.GetCommissionSummaryResponse
	(*CommissionSummary)(nil),                  // 30: commission.CommissionSummary
	(*GetCommissionReportRequest)(nil),         // 31: commission.GetCommissionReportRequest
	(*GetCommissionReportResponse)(nil),        // 32: commission.GetCommissionReportResponse
	(*BulkCalculateCommissionsRequest)(nil),    // 33: commission.BulkCalculateCommissionsRequest
	(*BulkCalculateCommissionsResponse)(nil),   // 34: commission.BulkCalculateCommissionsResponse
	(*BulkApproveCommissionsRequest)(nil),      // 35: commission.BulkApproveCommissionsRequest
	(*BulkApproveCommissionsResponse)(nil),     // 36: commission.BulkApproveCommissionsResponse
	(*GetCommissionSettingsRequest)(nil),       // 37: commission.GetCommissionSettingsRequest
	(*GetCommissionSettingsResponse)(nil),      // 38: commission.GetCommissionSettingsResponse
	(*CommissionTierSetting)(nil),              // 39: commission.CommissionTierSetting
	(*timestamppb.Timestamp)(nil),              // 40: google.protobuf.Timestamp
}
var file_commissions_commision_service_proto_depIdxs = []int32{
	1,  // 0: commission.CommissionCalculation.status:type_name -> commission.CommissionStatus
	40, // 1: commission.CommissionCalculation.created_at:type_name -> google.protobuf.Timestamp
	40, // 2: commission.CommissionCalculation.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 3: commission.CommissionCalculation.commission_details:type_name -> commission.CommissionDetail
	7,  // 4: commission.CommissionCalculation.commission_payment:type_name -> commission.CommissionPayment
	8,  // 5: commission.CommissionCalculation.employee:type_name -> commission.EmployeeSummary
	40, // 6: commission.CommissionDetail.created_at:type_name -> google.protobuf.Timestamp
	40, // 7: commission.CommissionPayment.created_at:type_name -> google.protobuf.Timestamp
	9,  // 8: commission.CommissionPayment.payment_type:type_name -> commission.PaymentTypeSummary
	0,  // 9: commission.EmployeeSummary.commission_type:type_name -> commission.CommissionType
	11, // 10: commission.CommissionBreakdown.tier_commissions:type_name -> commission.TierCommission
	5,  // 11: commission.CalculateCommissionResponse.commission_calculation:type_name -> commission.CommissionCalculation
	10, // 12: commission.CalculateCommissionResponse.breakdown:type_name -> commission.CommissionBreakdown
	5,  // 13: commission.RecalculateCommissionResponse.commission_calculation:type_name -> commission.CommissionCalculation
	10, // 14: commission.RecalculateCommissionResponse.breakdown:type_name -> commission.CommissionBreakdown
	5,  // 15: commission.GetCommissionCalculationResponse.commission_calculation:type_name -> commission.CommissionCalculation
	2,  // 16: commission.ListCommissionCalculationsRequest.pagination:type_name -> commission.PaginationRequest
	1,  // 17: commission.ListCommissionCalculationsRequest.status:type_name -> commission.CommissionStatus
	4,  // 18: commission.ListCommissionCalculationsRequest.calculation_period:type_name -> commission.DateRange
	5,  // 19: commission.ListCommissionCalculationsResponse.commission_calculations:type_name -> commission.CommissionCalculation
	3,  // 20: commission.ListCommissionCalculationsResponse.pagination:type_name -> commission.PaginationResponse
	5,  // 21: commission.ApproveCommissionResponse.commission_calculation:type_name -> commission.CommissionCalculation
	5,  // 22: commission.RejectCommissionResponse.commission_calculation:type_name -> commission.CommissionCalculation
	7,  // 23: commission.PayCommissionResponse.commission_payment:type_name -> commission.CommissionPayment
	5,  // 24: commission.PayCommissionResponse.updated_calculation:type_name -> commission.CommissionCalculation
	7,  // 25: commission.GetCommissionPaymentResponse.commission_payment:type_name -> commission.CommissionPayment
	4,  // 26: commission.GetCommissionSummaryRequest.date_range:type_name -> commission.DateRange
	30, // 27: commission.GetCommissionSummaryResponse.summary:type_name -> commission.CommissionSummary
	4,  // 28: commission.CommissionSummary.period:type_name -> commission.DateRange
	5,  // 29: commission.CommissionSummary.recent_calculations:type_name -> commission.CommissionCalculation
	4,  // 30: commission.GetCommissionReportRequest.date_range:type_name -> commission.DateRange
	1,  // 31: commission.GetCommissionReportRequest.status:type_name -> commission.CommissionStatus
	2,  // 32: commission.GetCommissionReportRequest.pagination:type_name -> commission.PaginationRequest
	30, // 33: commission.GetCommissionReportResponse.employee_summaries:type_name -> commission.CommissionSummary
	3,  // 34: commission.GetCommissionReportResponse.pagination:type_name -> commission.PaginationResponse
	5,  // 35: commission.BulkCalculateCommissionsResponse.calculations:type_name -> commission.CommissionCalculation
	5,  // 36: commission.BulkApproveCommissionsResponse.approved_calculations:type_name -> commission.CommissionCalculation
	8,  // 37: commission.GetCommissionSettingsResponse.employee:type_name -> commission.EmployeeSummary
	39, // 38: commission.GetCommissionSettingsResponse.tier_settings:type_name -> commission.CommissionTierSetting
	12, // 39: commission.CommissionService.CalculateCommission:input_type -> commission.CalculateCommissionRequest
	14, // 40: commission.CommissionService.RecalculateCommission:input_type -> commission.RecalculateCommissionRequest
	33, // 41: commission.CommissionService.BulkCalculateCommissions:input_type -> commission.BulkCalculateCommissionsRequest
	16, // 42: commission.CommissionService.GetCommissionCalculation:input_type -> commission.GetCommissionCalculationRequest
	18, // 43: commission.CommissionService.ListCommissionCalculations:input_type -> commission.ListCommissionCalculationsRequest
	20, // 44: commission.CommissionService.ApproveCommission:input_type -> commission.ApproveCommissionRequest
	22, // 45: commission.CommissionService.RejectCommission:input_type -> commission.RejectCommissionRequest
	35, // 46: commission.CommissionService.BulkApproveCommissions:input_type -> commission.BulkApproveCommissionsRequest
	24, // 47: commission.CommissionService.PayCommission:input_type -> commission.PayCommissionRequest
	26, // 48: commission.CommissionService.GetCommissionPayment:input_type -> commission.GetCommissionPaymentRequest
	28, // 49: commission.CommissionService.GetCommissionSummary:input_type -> commission.GetCommissionSummaryRequest
	31, // 50: commission.CommissionService.GetCommissionReport:input_type -> commission.GetCommissionReportRequest
	37, // 51: commission.CommissionService.GetCommissionSettings:input_type -> commission.GetCommissionSettingsRequest
	13, // 52: commission.CommissionService.CalculateCommission:output_type -> commission.CalculateCommissionResponse
	15, // 53: commission.CommissionService.RecalculateCommission:output_type -> commission.RecalculateCommissionResponse
	34, // 54: commission.CommissionService.BulkCalculateCommissions:output_type -> commission.BulkCalculateCommissionsResponse
	17, // 55: commission.CommissionService.GetCommissionCalculation:output_type -> commission.GetCommissionCalculationResponse
	19, // 56: commission.CommissionService.ListCommissionCalculations:output_type -> commission.ListCommissionCalculationsResponse
	21, // 57: commission.CommissionService.ApproveCommission:output_type -> commission.ApproveCommissionResponse
	23, // 58: commission.CommissionService.RejectCommission:output_type -> commission.RejectCommissionResponse
	36, // 59: commission.CommissionService.BulkApproveCommissions:output_type -> commission.BulkApproveCommissionsResponse
	25, // 60: commission.CommissionService.PayCommission:output_type -> commission.PayCommissionResponse
	27, // 61: commission.CommissionService.GetCommissionPayment:output_type -> commission.GetCommissionPaymentResponse
	29, // 62: commission.CommissionService.GetCommissionSummary:output_type -> commission.GetCommissionSummaryResponse
	32, // 63: commission.CommissionService.GetCommissionReport:output_type -> commission.GetCommissionReportResponse
	38, // 64: commission.CommissionService.GetCommissionSettings:output_type -> commission.GetCommissionSettingsResponse
	52, // [52:65] is the sub-list for method output_type
	39, // [39:52] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_commissions_commision_service_proto_init() }
func file_commissions_commision_service_proto_init() {
	if File_commissions_commision_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commissions_commision_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionCalculation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeeSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentTypeSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionBreakdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TierCommission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateCommissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecalculateCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecalculateCommissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionCalculationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionCalculationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommissionCalculationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommissionCalculationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveCommissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectCommissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayCommissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCalculateCommissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCalculateCommissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkApproveCommissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkApproveCommissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commissions_commision_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionTierSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_commissions_commision_service_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_commissions_commision_service_proto_msgTypes[37].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commissions_commision_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commissions_commision_service_proto_goTypes,
		DependencyIndexes: file_commissions_commision_service_proto_depIdxs,
		EnumInfos:         file_commissions_commision_service_proto_enumTypes,
		MessageInfos:      file_commissions_commision_service_proto_msgTypes,
	}.Build()
	File_commissions_commision_service_proto = out.File
	file_commissions_commision_service_proto_rawDesc = nil
	file_commissions_commision_service_proto_goTypes = nil
	file_commissions_commision_service_proto_depIdxs = nil
}
